
&НаКлиенте
Процедура КлиентыПриАктивизацииСтроки(Элемент)
	ТекущийКлиент = Элементы.Клиенты.ТекущиеДанные.Ссылка;
	УстановитьОтборПоКлиенту();
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоКлиенту()
	НЗ = РеквизитФормыВЗначение("Доработки");
	НЗ.Отбор.Клиент.Использование = Истина;
	НЗ.Отбор.Клиент.Значение = ТекущийКлиент;
	НЗ.Прочитать();
	ЗначениеВРеквизитФормы(НЗ,"Доработки");
КонецПроцедуры	

&НаКлиенте
Процедура ДоработкиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ЗаписатьИзмененияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзмененияНаСервере()
	НЗ = РеквизитФормыВЗначение("Доработки");
	НЗ.Записать();
КонецПроцедуры	

&НаКлиенте
Процедура ДоработкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Клиент) Тогда
		Элемент.ТекущиеДанные.Клиент = ТекущийКлиент;
	КонецЕсли;
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Пользователь = ТекущийПользователь;
		Элемент.ТекущиеДанные.ДатаИзменений = ТекущаяДата(); 
	КонецЕсли;
	Сообщить("Привет, Серега!!");
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

&НаКлиенте
Процедура ДоработкиПослеУдаления(Элемент)
	ЗаписатьИзмененияНаСервере();
	ф = 5;
КонецПроцедуры
